  - name: Ensure resource group for Azure central environment exist
    azure_rm_resourcegroup:
      name: "{{ groupPrefix }}-central"
      location: "{{ location }}"

  - name: Ensure Azure central networks exist
    azure_rm_deployment:
      deployment_name: centralNet
      location: "{{ location }}"
      resource_group_name: "{{ groupPrefix }}-central"
      template: "{{ lookup('file', 'netDeploy.json') }}"
      parameters:
        netName: 
          value: "{{ centralNetName }}"
        netPrefix: 
          value: 10.0.0.0/16
        internalPrefix: 
          value: 10.0.10.0/24
        externalPrefix: 
          value: 10.0.20.0/24
        managementPrefix: 
          value: 10.0.30.0/24

  - name: Ensure F5 in central network is deployed
    azure_rm_deployment:
      deployment_name: f5
      location: "{{ location }}"
      resource_group_name: "{{ groupPrefix }}-central"
      template: "{{ lookup('file', 'big-ip-ve-byol-3nic.json') }}"
      parameters:
        adminUsername: 
          value: "{{ adminUsername }}"
        adminPassword:
          value: "{{ adminPassword }}"
        dnsLabel:
          value: "{{ dnsPrefix }}-central"
        instanceName:
          value: "{{ dnsPrefix }}-central"
        instanceType:
          value: Standard_DS3_v2
        imageName:
          value: Best
        licenseKey1:
          value: "{{ license1 }}"
        numberOfExternalIps:
          value: 3
        vnetName:
          value: "{{ centralNetName }}"
        vnetResourceGroupName:
          value: "{{ groupPrefix }}-central"
        mgmtSubnetName:
          value: management
        mgmtIpAddress:
          value: 10.0.30.10
        externalSubnetName:
          value: external
        externalIpAddressRangeStart:
          value: 10.0.20.10
        internalSubnetName:
          value: internal
        internalIpAddress:
          value: 10.0.10.10

  - name: Ensure application ports are open on F5 external interface NSG
    azure_rm_securitygroup:
      resource_group: "{{ groupPrefix }}-central"
      name: "{{ dnsPrefix }}-central-ext-nsg"
      rules:
        - name: Allow_HTTP
          protocol: Tcp
          destination_port_range: 80
          access: Allow
          priority: 100
          direction: Inbound
        - name: Allow_HTTPS
          protocol: Tcp
          destination_port_range: 443
          access: Allow
          priority: 102
          direction: Inbound
        - name: Allow_SSH
          protocol: Tcp
          destination_port_range: 22
          access: Allow
          priority: 103
          direction: Inbound

  - name: Login to Azure CLI 2.0
    command: "az login --service-principal -u {{ servicePrincipal }} -p {{ clientSecret }} --tenant {{ tenantId }}"
    delegate_to: localhost

  - name: Update internal F5 NIC to enable IP Forwarding to server as gateway for machines in internal subnet
    command: "az network nic update -g {{ groupPrefix }}-central -n {{ dnsPrefix }}-central-int --ip-forwarding true"
    delegate_to: localhost

  - name: Ensure routing table with default route to F5 exists
    azure_rm_deployment:
      deployment_name: f5-routing-table
      location: "{{ location }}"
      resource_group_name: "{{ groupPrefix }}-central"
      template: "{{ lookup('file', 'routeTable.json') }}"
      parameters:
        applianceIp: 
          value: "10.0.10.10"
        routeTableName:
          value: route-int-to-f5

  - name: Update internal subnet with routing table
    command: "az network vnet subnet update -g {{ groupPrefix }}-central --vnet-name {{ centralNetName }} -n internal --route-table route-int-to-f5"
    delegate_to: localhost

  - name: Find first Public IP
    azure_rm_publicipaddress_facts:
      resource_group: "{{ groupPrefix }}-central"
      name: "{{ dnsPrefix }}-central-ext-pip0"
    register: firstNIC

  - name: Find second Public IP
    azure_rm_publicipaddress_facts:
      resource_group: "{{ groupPrefix }}-central"
      name: "{{ dnsPrefix }}-central-ext-pip1"
    register: secondNIC

  - name: Find third Public IP
    azure_rm_publicipaddress_facts:
      resource_group: "{{ groupPrefix }}-central"
      name: "{{ dnsPrefix }}-central-ext-pip2"
    register: thirdNIC

  - name: Store public IPs in variables
    set_fact:
      externalIp1: "{{ firstNIC.ansible_facts.azure_publicipaddresses[0].properties.ipAddress }}"
      externalIp2: "{{ secondNIC.ansible_facts.azure_publicipaddresses[0].properties.ipAddress }}"
      externalIp3: "{{ thirdNIC.ansible_facts.azure_publicipaddresses[0].properties.ipAddress }}"

  - name: Register first IP in my DNS
    azure_rm_dnsrecordset:
      resource_group: shared-services
      relative_name: "app1.{{ groupPrefix }}"
      zone_name: azure.tomaskubica.cz
      record_type: A
      records:
        - entry: "{{ externalIp1}}"

  - name: Register second IP in my DNS
    azure_rm_dnsrecordset:
      resource_group: shared-services
      relative_name: "app2.{{ groupPrefix }}"
      zone_name: azure.tomaskubica.cz
      record_type: A
      records:
        - entry: "{{ externalIp1}}"

  - name: Register third IP in my DNS
    azure_rm_dnsrecordset:
      resource_group: shared-services
      relative_name: "app3.{{ groupPrefix }}"
      zone_name: azure.tomaskubica.cz
      record_type: A
      records:
        - entry: "{{ externalIp1}}"